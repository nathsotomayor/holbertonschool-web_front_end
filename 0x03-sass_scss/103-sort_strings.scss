/* Write a Sass file that creates classes with different width:
col-1 with width equals to 100%
col-2 with width equals to 50%
col-3 with width equals to 33.3333333333%
col-4 with width equals to 25%
You must create .col-* class from 1 to 4
You must use a @for statement */

@import "103-sort_list";
$sort-order: a b c d e f g h i j k l m n o p q r s t u v w x y z !default;

@function compare($string-a, $string-b, $sort-order) {
  $string-a: to-lower-case($string-a + unquote(""));
  $string-b: to-lower-case($string-b + unquote(""));

  @for $i from 1 through min(str-length($string-a), str-length($string-b)) {
    $char-a: str-slice($string-a, $i, $i);
    $char-b: str-slice($string-b, $i, $i);

    @if $char-a and
      $char-b and
      index($sort-order, $char-a) !=
      index($sort-order, $char-b)
    {
      @return index($sort-order, $char-a) < index($sort-order, $char-b);
    }
  }

  @return str-length($string-a) < str-length($string-b);
}

@function swap($list, $index-a, $index-b) {
  @if abs($index-a) > length($list) or abs($index-b) > length($list) {
    @return $list;
  }
  $temp: nth($list, $index-a);
  $list: set-nth($list, $index-a, nth($list, $index-b));
  $list: set-nth($list, $index-b, $temp);
  @return $list;
}

@function sort($list, $sort-order) {
  @for $i from 1 through length($list) {
    @for $j from $i * -1 through -1 {
      $j: abs($j);
      @if $j > 1 and compare(nth($list, $j), nth($list, $j - 1), $sort-order) {
        $list: swap($list, $j, $j - 1);
      }
    }
  }
  @return $list;
}

$sort: sort($list_to_sort, $sort-order);
@debug $sort;
